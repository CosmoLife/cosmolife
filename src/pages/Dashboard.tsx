
import { useState, useEffect } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { useProfile } from '@/contexts/ProfileContext';
import { useInvestment } from '@/contexts/InvestmentContext';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { useToast } from '@/hooks/use-toast';
import Header from '@/components/Header';
import ProfileEditor from '@/components/ProfileEditor';
import PaymentConfirmation from '@/components/PaymentConfirmation';
import ShareSaleModal from '@/components/ShareSaleModal';
import AdminPanel from '@/components/AdminPanel';
import IncomeTransactionsModal from '@/components/IncomeTransactionsModal';
import InvestmentStats from '@/components/dashboard/InvestmentStats';
import InvestmentForm from '@/components/dashboard/InvestmentForm';
import InvestmentHistory from '@/components/dashboard/InvestmentHistory';
import ShareSaleSection from '@/components/dashboard/ShareSaleSection';
import ShareSaleHistory from '@/components/dashboard/ShareSaleHistory';
import InvestorVideosSection from '@/components/dashboard/InvestorVideosSection';
import { TrafficAnalytics } from '@/components/dashboard/TrafficAnalytics';

const Dashboard = () => {
  const { user, loading } = useAuth();
  const { profile, isAdmin } = useProfile();
  const { investments, addInvestment, incomeTransactions, shareSaleRequests } = useInvestment();
  const [showPayment, setShowPayment] = useState(false);
  const [showConfirmation, setShowConfirmation] = useState<{id: string, method?: string} | null>(null);
  const [showShareSale, setShowShareSale] = useState(false);
  const [showIncomeTransactions, setShowIncomeTransactions] = useState(false);
  const [investmentHistoryPage, setInvestmentHistoryPage] = useState(1);
  const [shareHistoryPage, setShareHistoryPage] = useState(1);
  const navigate = useNavigate();
  const { toast } = useToast();

  useEffect(() => {
    if (!loading && !user) {
      navigate('/login');
    }
  }, [user, loading, navigate]);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-white text-xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  if (!user) return null;

  // –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ (—Å—Ç–∞—Ç—É—Å 'paid' –∏–ª–∏ 'active')
  const paidInvestments = investments.filter(inv => inv.status === 'paid' || inv.status === 'active');
  const totalInvestment = paidInvestments.reduce((sum, inv) => sum + inv.amount, 0);
  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–û–†–ú–£–õ–ê: –∫–∞–∂–¥—ã–µ 50,000 —Ä—É–±–ª–µ–π = 0.01%
  const totalPercentage = totalInvestment * 0.01 / 50000;
  const totalReceivedIncome = incomeTransactions.reduce((sum, t) => sum + t.amount, 0);
  const yearlyReturn = totalPercentage * 357600000 / 100;
  const potentialReturn = totalPercentage * 178800000000 / 100;

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –∏—Å—Ç–æ—Ä–∏–π
  const itemsPerPage = 5;
  
  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
  const totalInvestmentPages = Math.ceil(investments.length / itemsPerPage);
  const startInvestmentIndex = (investmentHistoryPage - 1) * itemsPerPage;
  const paginatedInvestments = investments.slice(startInvestmentIndex, startInvestmentIndex + itemsPerPage);
  
  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É
  const totalSharePages = Math.ceil(shareSaleRequests.length / itemsPerPage);
  const startShareIndex = (shareHistoryPage - 1) * itemsPerPage;
  const paginatedShareRequests = shareSaleRequests.slice(startShareIndex, startShareIndex + itemsPerPage);

  const handleInvestment = async (investmentAmount: number, paymentMethod: 'yoomoney' | 'usdt' | 'card') => {
    if (investmentAmount < 50000) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π 50,000 —Ä—É–±–ª–µ–π",
        variant: "destructive"
      });
      return;
    }

    try {
      await addInvestment(investmentAmount, paymentMethod);
      
      switch (paymentMethod) {
        case 'yoomoney':
          window.open(`https://yoomoney.ru/to/410019220622751/${investmentAmount}`, '_blank');
          break;
        case 'usdt':
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞
          break;
        case 'card':
          // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram –∏–ª–∏ WhatsApp –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã
          break;
      }
      
      toast({
        title: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!",
        description: "–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –æ–ø–ª–∞—Ç—ã. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.",
      });
    } catch (error) {
      console.error('Error creating investment:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        variant: "destructive"
      });
    }
  };

  const handleShareSale = () => {
    if (totalPercentage <= 0) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–ª–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏",
        variant: "destructive"
      });
      return;
    }
    
    setShowShareSale(true);
  };

  return (
    <div className="min-h-screen">
      <Header />
      
      {/* –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
      <Button
        onClick={() => window.location.reload()}
        variant="outline"
        size="sm"
        className="fixed top-20 right-4 z-40 glass-premium neuro-card border border-white/20 text-white/80 hover:text-white hover:bg-white/10 backdrop-blur-sm rounded-xl transition-all duration-300"
      >
        üîÑ
      </Button>
      
      <section className="pt-32 pb-20">
        <div className="container mx-auto px-6">
          <div className="max-w-6xl mx-auto">
            <div className="text-center mb-12">
              <h1 className="text-4xl md:text-5xl font-bold bg-neon-gradient bg-clip-text text-transparent neon-text mb-4">
                –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
              </h1>
              <p className="text-xl text-white/80">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.email}
              </p>
             </div>
             
             {/* –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å */}
             {isAdmin && <AdminPanel />}
            
            {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è */}
            <ProfileEditor />
            
            {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <InvestmentStats
              totalInvestment={totalInvestment}
              totalPercentage={totalPercentage}
              yearlyReturn={yearlyReturn}
              potentialReturn={potentialReturn}
              totalReceivedIncome={totalReceivedIncome}
              onShowIncomeTransactions={() => setShowIncomeTransactions(true)}
              onScrollToVideos={() => {
                const videoSection = document.getElementById('investor-videos');
                videoSection?.scrollIntoView({ behavior: 'smooth' });
              }}
            />

            {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ - –≤–∏–¥–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º */}
            {totalPercentage > 0 && <TrafficAnalytics />}

            {/* –ë–ª–æ–∫ –ø–æ–∫—É–ø–∫–∏ –¥–æ–ª–∏ (–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) */}
            <InvestmentForm
              showPayment={showPayment}
              onShowPayment={setShowPayment}
              onInvestment={handleInvestment}
            />
            
            {/* –ò—Å—Ç–æ—Ä–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π */}
            <InvestmentHistory
              investments={investments}
              currentPage={investmentHistoryPage}
              onPageChange={setInvestmentHistoryPage}
              onShowConfirmation={setShowConfirmation}
              itemsPerPage={itemsPerPage}
            />

            {/* –ë–ª–æ–∫ –ø—Ä–æ–¥–∞–∂–∏ –¥–æ–ª–∏ */}
            <ShareSaleSection
              totalPercentage={totalPercentage}
              onShareSale={handleShareSale}
            />

            {/* –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É –¥–æ–ª–∏ */}
            <ShareSaleHistory
              shareSaleRequests={shareSaleRequests}
              currentPage={shareHistoryPage}
              onPageChange={setShareHistoryPage}
              itemsPerPage={itemsPerPage}
            />

            {/* –í–∏–¥–µ–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ */}
            <div id="investor-videos">
              <InvestorVideosSection
                hasInvestments={totalPercentage > 0}
              />
            </div>
          </div>
        </div>
      </section>
      
      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {showConfirmation && (
        <PaymentConfirmation
          investmentId={showConfirmation.id}
          paymentMethod={showConfirmation.method}
          onClose={() => setShowConfirmation(null)}
        />
      )}
      
      {showShareSale && (
        <ShareSaleModal
          totalPercentage={totalPercentage}
          onClose={() => setShowShareSale(false)}
        />
      )}

      {showIncomeTransactions && (
            <IncomeTransactionsModal
              isOpen={showIncomeTransactions}
              onClose={() => setShowIncomeTransactions(false)}
              transactions={incomeTransactions}
              totalInvestment={totalInvestment}
              totalPercentage={totalPercentage}
            />
      )}
    </div>
  );
};

export default Dashboard;
